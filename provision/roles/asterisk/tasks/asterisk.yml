---
- name: Configure Asterisk
  shell:
    ./configure && ./contrib/scripts/get_mp3_source.sh
    chdir={{ asterisk_src_dir.stdout }}
  tags: asterisk

- name: Copy menuselect.makeopts file
  template:
    src: menuselect.makeopts.j2
    dest: "{{ asterisk_src_dir.stdout }}/menuselect.makeopts"
  tags: asterisk

- name: Compile Asterisk (this will take a while)
  shell:
    make && make install && make config && make samples && make progdocs
    chdir={{ asterisk_src_dir.stdout }}
  tags: asterisk

- name: Install Asterisk logrotate
  command:
    make install-logrotate
    chdir={{ asterisk_src_dir.stdout }}
  tags: asterisk

- name: Apply ulimit to 8192
  shell:
    ulimit -n 8192
  tags: asterisk

- name: Do not ask for CA certificate password (insecure)
  replace:
    dest: "{{ asterisk_src_dir.stdout }}/contrib/scripts/ast_tls_cert"
    regexp: '\s-des3'
  tags: asterisk certificates

- name: Add reference of host to local hosts file
  lineinfile: "dest={{ hosts_file }} state=present line='{{ boxipaddress }} {{ boxname }}'"
  tags: asterisk certificates

- name: Generate CA and server certificates
  command:
    ./ast_tls_cert -C {{ boxname }} -O "{{ organization }}" -d /etc/asterisk/keys
    chdir={{ asterisk_src_dir.stdout }}/contrib/scripts
  tags: asterisk certificates

- name: Generate client certificate
  command:
    ./ast_tls_cert -C {{ boxname }} -m client -c /etc/asterisk/keys/ca.crt -k /etc/asterisk/keys/ca.key -O "{{ organization }}" -d /etc/asterisk/keys -o client
    chdir={{ asterisk_src_dir.stdout }}/contrib/scripts
  tags: asterisk certificates

- name: Make Asterisk service to be executed as Asterisk user
  replace:
    dest: "/etc/default/asterisk"
    regexp: "#AST_USER"
    replace: "AST_USER"
  notify: Restart Asterisk
  tags: asterisk permissions

- name: Make Asterisk service to be executed as Asterisk group
  replace:
    dest: "/etc/default/asterisk"
    regexp: "#AST_GROUP"
    replace: "AST_GROUP"
  notify: Restart Asterisk
  tags: asterisk permissions

- name: Change permissions on Asterisk directories
  file:
    path: "{{ item }}"
    group: "{{ asterisk_group }}"
    owner: "{{ asterisk_user }}"
    recurse: yes
    state: directory
  with_items:
    - /var/run/asterisk
    - /etc/asterisk
    - /var/lib/asterisk
    - /var/log/asterisk
    - /var/spool/asterisk
    - /var/www
  notify: Restart Asterisk
  tags: asterisk permissions

